<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maiqi.dao.UserDao">
	<!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！ -->
	<resultMap id="User" type="com.maiqi.po.User">
		<id column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="loginName" property="loginName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="isAdmin" property="isAdmin" jdbcType="INTEGER" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="createUserId" property="createUserId" jdbcType="VARCHAR" />
		<result column="updateUserId" property="updateUserId" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 查询单条记录 -->
	<select id="selectUserById" parameterType="java.lang.String" resultMap="User">
		SELECT * FROM t_user WHERE userId = #{userId}
	</select>
	
	<!-- 查询用户列表 -->
	<select id="selectOperators" resultType="java.util.Map">
		SELECT userId,userName,loginName,userDesc,createTime,updateTime FROM t_user WHERE isAdmin = 0
	</select>
	
	<!-- 验证user -->
	<select id="verifyUser" resultMap="User">
		SELECT * FROM t_user WHERE loginName = #{loginName, jdbcType=VARCHAR} and password = #{password, jdbcType=VARCHAR}
	</select>

	<!-- 插入语句 -->
	<insert id="createUser" parameterType="com.maiqi.po.User" >

		<selectKey keyProperty="userId" resultType="java.lang.String" order="BEFORE">
			select UUID()
		</selectKey>

		INSERT INTO t_user
		(
		userId,
		userName,
		loginName,
		password,
		createUserId,
		updateUserId
		)
		VALUES
		(
		#{userId},
		#{userName},
		#{loginName},
		#{password},
		#{createUserId},
		#{updateUserId}
		)
	</insert>
	
	<update id="saveUser" parameterType="com.maiqi.po.User">  
        update t_user set  
        userName=#{userName}, loginName=#{loginName}, userDesc=#{userDesc}, updateUserId=#{updateUserId} where userId=#{userId}  
    </update> 
</mapper> 